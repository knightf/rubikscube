var Rubik={}||Rubik;Rubik.settings={renderer:{width:window.innerWidth,height:window.innerHeight},cube:{stage:3,sideLength:2,gap:.1,facet:[THREE.ImageUtils.loadTexture("./images/blue.jpg"),THREE.ImageUtils.loadTexture("./images/green.jpg"),THREE.ImageUtils.loadTexture("./images/orange.jpg"),THREE.ImageUtils.loadTexture("./images/pink.jpg"),THREE.ImageUtils.loadTexture("./images/red.jpg")]},camera:[{fov:75,near:.1,far:1e3}]},Rubik.renderer=new THREE.WebGLRenderer({alpha:!0}),Rubik.scene=new THREE.Scene,Rubik.cameras={camera0:new THREE.PerspectiveCamera},Rubik.interfaceState="waiting",Rubik.loadScene=function(a){for(var b=this.mesh.getCubes(),c=0;c<b.length;c++)a.add(b[c])},Rubik.loadLight=function(a){var b=new THREE.PointLight(16711664,2.4,100);b.position.set(12,12,12),a.add(b)},Rubik.setupCamera=function(a){var b=this.settings.renderer,c=this.settings.camera[0];a.fov=c.fov,a.aspect=b.width/b.height,a.near=c.near,a.far=c.far,a.position.x=12,a.position.y=10,a.position.z=12;var d=this.settings.cube,e=d.sideLength*d.stage/2;a.lookAt(new THREE.Vector3(e,e,e)),a.updateProjectionMatrix()},Rubik.frameUpdate=function(a,b){var c=Rubik;if("randoming"===c["interface"].flag&&c["interface"].randomTick(a),c.interaction.tick(b,a),"idle"===c.interaction.flag)switch(c["interface"].flag){case"wholeY":c["interface"].wholeTick("y",a);break;case"wholeX":c["interface"].wholeTick("x",a);break;case"wholeZ":c["interface"].wholeTick("z",a);break;default:return}},Rubik.startRendering=function(a,b,c){function d(){requestAnimationFrame(d),e.frameUpdate(c,b),a.render(c,b)}var e=Rubik,f=this.settings.renderer;a.setSize(f.width,f.height),window.addEventListener("resize",function(){e.domEvents.onResize(b,a)},!1),document.getElementById("canvasWrapper").appendChild(a.domElement),d()},Rubik.deploy=function(){var a=Rubik,b=a.renderer,c=a.scene,d=a.cameras.camera0;a.frameUpdate;a.loadScene(c),a.loadLight(c),a.setupCamera(d),a.startRendering(b,d,c),a.interaction.initialize(d)},Rubik.mesh={getCubes:function(){for(var a=Rubik.settings.cube,b=a.sideLength-a.gap,c=new THREE.BoxGeometry(b,b,b),d=[],e=a.facet,f=0;f<e.length;f++)d.push(new THREE.MeshLambertMaterial({ambient:16777215,map:e[f]}));d.push(new THREE.MeshLambertMaterial({color:16777215}));var g,f,h,i,j=[[d[5],d[1],d[5],d[3],d[5],d[5]],[d[5],d[5],d[5],d[3],d[5],d[5]],[d[0],d[5],d[5],d[3],d[5],d[5]],[d[5],d[1],d[5],d[5],d[5],d[5]],[d[5],d[5],d[5],d[5],d[5],d[5]],[d[0],d[5],d[5],d[5],d[5],d[5]],[d[5],d[1],d[2],d[5],d[5],d[5]],[d[5],d[5],d[2],d[5],d[5],d[5]],[d[0],d[5],d[2],d[5],d[5],d[5]],[d[5],d[1],d[5],d[3],d[5],d[5]],[d[5],d[5],d[5],d[3],d[5],d[5]],[d[0],d[5],d[5],d[3],d[5],d[5]],[d[5],d[1],d[5],d[5],d[5],d[5]],[d[5],d[5],d[5],d[5],d[5],d[5]],[d[0],d[5],d[5],d[5],d[5],d[5]],[d[5],d[1],d[2],d[5],d[5],d[5]],[d[5],d[5],d[2],d[5],d[5],d[5]],[d[0],d[5],d[2],d[5],d[5],d[5]],[d[5],d[1],d[5],d[3],d[4],d[5]],[d[5],d[5],d[5],d[3],d[4],d[5]],[d[0],d[5],d[5],d[3],d[4],d[5]],[d[5],d[1],d[5],d[5],d[4],d[5]],[d[5],d[5],d[5],d[5],d[4],d[5]],[d[0],d[5],d[5],d[5],d[4],d[5]],[d[5],d[1],d[2],d[5],d[4],d[5]],[d[5],d[5],d[2],d[5],d[4],d[5]],[d[0],d[5],d[2],d[5],d[4],d[5]]],k=[],l=a.stage;for(g=0;l>g;g++)for(f=0;l>f;f++)for(h=0;l>h;h++)i=g*l*l+f*l+h,k[i]=new THREE.Mesh(c,new THREE.MeshFaceMaterial(j[i])),k[i].position.set(h*a.sideLength+b/2,f*a.sideLength+b/2,g*a.sideLength+b/2),k[i].name="cube";return k}},Rubik.interaction={scene:Rubik.scene,raycaster:new THREE.Raycaster,mouse:new THREE.Vector2,flag:null,slot:null,startPoint:null,maxDetectingFrame:4,frameCounter:0,rotatingAxis:null,rotatingPivot:null,rotatingCubes:null,baseAtan2:null,pivotVector2:null,rotatingStep:Math.PI/80,rotationDestination:null,initialize:function(a){var b=this;Rubik["interface"].setFlag("randoming");var c=Rubik.renderer.domElement;c.addEventListener("mousemove",function(a){a.preventDefault(),b.mouse.x=a.clientX/window.innerWidth*2-1,b.mouse.y=2*-(a.clientY/window.innerHeight)+1,Rubik.domEvents.onMouseMove(b)},!1),c.addEventListener("touchmove",function(a){1===a.touches.length&&(a.preventDefault(),b.mouse.x=a.touches[0].pageX/window.innerWidth*2-1,b.mouse.y=2*-(a.touches[0].pageY/window.innerHeight)+1,Rubik.domEvents.onMouseMove(b))}),c.addEventListener("mousedown",function(a){1===a.which&&"idle"===b.flag&&b.pushClickedCube(b)},!1),c.addEventListener("touchstart",function(c){1===c.touches.length&&(c.preventDefault(),b.mouse.x=c.touches[0].pageX/window.innerWidth*2-1,b.mouse.y=2*-(c.touches[0].pageY/window.innerHeight)+1,b.raycaster.setFromCamera(b.mouse,a),"idle"===b.flag&&b.pushClickedCube(b))}),c.addEventListener("mouseup",function(a){1===a.which&&Rubik.domEvents.onMouseUp(b)},!1),c.addEventListener("touchend",function(a){Rubik.domEvents.onMouseUp(b)})},tick:function(a,b){var c=this,d=c.raycaster,e=c.mouse;d.setFromCamera(e,a),"ending"===c.flag&&c.rotateAnimate(c)},pushClickedCube:function(a){var b,c=a.raycaster,d=(a.mouse,a.scene),e=c.intersectObjects(d.children);e.length>0&&(b=e[0].face.normal.clone(),b.applyEuler(e[0].object.rotation).normalize().round(),1===b.x?faceNomal="x":1===b.y?faceNomal="y":1===b.z&&(faceNomal="z"),a.slot={obj:e[0].object.clone(),facing:faceNomal},console.log("%cthe rotation starts with this cube:","background: red; color: white",a.slot.obj),console.log("%crotated normal vector is ","background: yellow; color black",b),console.log("%cthe program think it's facing ","background: yellow; color black",faceNomal),a.startPoint=a.mouse.clone(),a.frameCounter++,a.flag="detecting",console.log("%cflag is detecting now","background: yellow; color: black"))},abortDetection:function(a){a.flag="idle",console.log("%cinteraction aborted during detection. flag is idle now","background: yellow; color: black"),a.startPoint=null,a.frameCounter=0,a.slot=null},directionCalc:function(a,b){var c,d=new THREE.Vector2(1,1).normalize(),e=new THREE.Vector2(0,1);if(a.frameCounter=0,!b.equals(a.startPoint)){var f=b.sub(a.startPoint).normalize(),g=null;"x"===a.slot.facing?(c=180*(Math.atan2(d.y,d.x)-Math.atan2(f.y,f.x))/Math.PI,g=c>-90&&0>c||c>90&&180>c?"z":"y"):"y"===a.slot.facing?(c=180*(Math.atan2(e.y,e.x)-Math.atan2(f.y,f.x))/Math.PI,g=c>-90&&0>c||c>90&&180>c?"z":"x"):(c=180*(Math.atan2(d.y,d.x)-Math.atan2(f.y,f.x))/Math.PI,g=c>-90&&0>c||c>90&&180>c?"x":"y"),a.rotatingAxis=g,a.prepareRotating(a)}},prepareRotating:function(a){var b=Rubik.scene,c=Rubik.settings.cube,d=(c.stage*c.sideLength-c.gap)/2,e=Rubik.cameras.camera0;a.rotatingPivot=new THREE.Object3D,a.rotatingPivot.position.x=a.rotatingPivot.position.y=a.rotatingPivot.position.z=d,a.rotatingPivot.position[a.rotatingAxis]=a.slot.obj.position[a.rotatingAxis],console.log("%cpivot is at:","background: blue; color: cyan",a.rotatingPivot.position),b.add(a.rotatingPivot),a.rotatingPivot.updateMatrixWorld(),a.rotatingPivot.rotation.set(0,0,0),a.rotatingCubes=a.getRotatingCubes(a.rotatingAxis,a.slot.obj,b);for(var f=0;f<a.rotatingCubes.length;f++)THREE.SceneUtils.attach(a.rotatingCubes[f],b,a.rotatingPivot);var g=a.rotatingPivot.position.clone().project(e);a.pivotVector2=new THREE.Vector2(g.x,g.y);var h=a.startPoint.clone().sub(a.pivotVector2);a.baseAtan2=Math.atan2(h.y,h.x),a.flag="rotating",console.log("%cflag is rotating now","background: yellow; color: black")},getRotatingCubes:function(a,b,c){var d,e=[];d=b.position[a];for(var f=0;f<c.children.length;f++)Math.abs(c.children[f].position[a]-d)<.1&&"cube"===c.children[f].name&&e.push(c.children[f]);return console.log("%cthere are the cubes to be rotated: ","background: blue; color: cyan",e),e},rotatingHandler:function(a){var b=a.rotatingAxis;console.log("%crotating around","color: #bbb",a.rotatingAxis);var c=a.mouse.clone().sub(a.pivotVector2),d=Math.atan2(c.y,c.x)-a.baseAtan2;d<-Math.PI&&(d+=2*Math.PI),d>Math.PI&&(d-=2*Math.PI),-Math.PI/2<d&&d<Math.PI/2&&Math.abs(d-a.rotatingPivot.rotation[b])<Math.PI/2&&("x"===b?a.rotatingPivot.rotation.set(d,0,0):"y"===b?a.rotatingPivot.rotation.set(0,d,0):"z"===b&&a.rotatingPivot.rotation.set(0,0,d))},checkRealRotation:function(a){var b=a.rotatingAxis;Rubik.scene;console.log("%cchecking if it is a valid rotation","background: green; color: white"),a.flag="ending",console.log("%cflag is ending now","background: yellow; color: black"),a.rotatingPivot.rotation[b]+Math.PI/2<Math.PI/3?(console.log("%cvalid for clockwise","background: green; color: white"),a.rotationDestination=-Math.PI/2):Math.PI/2-a.rotatingPivot.rotation[b]<Math.PI/3?(console.log("%cvalid for conter-clockwise","background: green; color: white"),a.rotationDestination=Math.PI/2):(console.log("%cnot a valid rotation, reset","color: green"),a.rotationDestination=0)},rotateAnimate:function(a){var b=a.rotatingStep;return axis=a.rotatingAxis,radians=a.rotationDestination,null===a.rotatingPivot?!1:void(Math.abs(a.rotatingPivot.rotation[axis]-radians)<=b?("x"===axis?a.rotatingPivot.rotation.set(radians,0,0):"y"===axis?a.rotatingPivot.rotation.set(0,radians,0):"z"===axis&&a.rotatingPivot.rotation.set(0,0,radians),a.releaseCubes(a)):(console.log("%cdoing the rest of animation","color: #bbb"),a.rotationDestination-a.rotatingPivot.rotation[axis]>0?"x"===axis?a.rotatingPivot.rotation.set(a.rotatingPivot.rotation[axis]+b,0,0):"y"===axis?a.rotatingPivot.rotation.set(0,a.rotatingPivot.rotation[axis]+b,0):"z"===axis&&a.rotatingPivot.rotation.set(0,0,a.rotatingPivot.rotation[axis]+b):"x"===axis?a.rotatingPivot.rotation.set(a.rotatingPivot.rotation[axis]-b,0,0):"y"===axis?a.rotatingPivot.rotation.set(0,a.rotatingPivot.rotation[axis]-b,0):"z"===axis&&a.rotatingPivot.rotation.set(0,0,a.rotatingPivot.rotation[axis]-b)))},releaseCubes:function(a){var b=(a.rotatingAxis,Rubik.scene);console.log("%ccleaning up...","background: red; color: white"),a.rotatingPivot.updateMatrixWorld();for(var c=0;c<a.rotatingCubes.length;c++)THREE.SceneUtils.detach(a.rotatingCubes[c],a.rotatingPivot,b),a.rotatingCubes[c].updateMatrixWorld();b.remove(a.rotatingPivot),a.rotatingPivot=null,a.rotatingAxis=null,a.rotatingCubes=null,a.rotationDestination=null,a.flag="idle",console.log("%cflag is idle now","background: yellow; color: black")}},Rubik["interface"]={flag:"waiting",rotatingPivot:null,rotatingCubes:null,rotatingAxis:null,rotationDestination:Math.PI/2,rotatingStep:Math.PI/15,randomTimes:24,randomCounter:0,setFlag:function(a){var b=this;"reset"===a?b.flag="waiting":"waiting"===b.flag&&(b.flag=a)},randomTick:function(a){var b,c,d=this,e=Rubik.settings.cube,f=["x","y","z"],g=(e.stage*e.sideLength-e.gap)/2;if(null===d.rotatingPivot){d.rotatingAxis=f[Math.floor(3*Math.random())],b=Math.floor(Math.random()*e.stage),console.log("randomed axis is ",d.rotatingAxis," at level ",b),d.rotatingPivot=new THREE.Object3D,c=e.sideLength*b+(e.sideLength-e.gap)/2,d.rotatingPivot.position.x=d.rotatingPivot.position.y=d.rotatingPivot.position.z=g,d.rotatingPivot.position[d.rotatingAxis]=c,console.log("%cpivot is at:","background: blue; color: cyan",d.rotatingPivot.position),a.add(d.rotatingPivot),d.rotatingPivot.updateMatrixWorld(),d.rotatingPivot.rotation.set(0,0,0),d.rotatingCubes=Rubik.interaction.getRotatingCubes(d.rotatingAxis,d.rotatingPivot,a);for(var h=0;h<d.rotatingCubes.length;h++)THREE.SceneUtils.attach(d.rotatingCubes[h],a,d.rotatingPivot);d.randomCounter++,console.log("randoming for the "+d.randomCounter+" time.")}Rubik.interaction.rotateAnimate(d)},wholeTick:function(a,b){var c=this,d=Rubik.settings.cube,e=(d.stage*d.sideLength-d.gap)/2;if(null===c.rotatingPivot){c.rotatingPivot=new THREE.Object3D,c.rotatingPivot.position.x=c.rotatingPivot.position.y=c.rotatingPivot.position.z=e,b.add(c.rotatingPivot),c.rotatingPivot.updateMatrixWorld(),c.rotatingPivot.rotation.set(0,0,0),c.rotatingCubes=c.getAllCubes(b);for(var f=0;f<c.rotatingCubes.length;f++)THREE.SceneUtils.attach(c.rotatingCubes[f],b,c.rotatingPivot);c.rotatingAxis=a,console.log("%cdoing rotating as a whole now","background: yellow; color: black")}Rubik.interaction.rotateAnimate(c)},getAllCubes:function(a){for(var b=[],c=0;c<a.children.length;c++)"cube"===a.children[c].name&&b.push(a.children[c]);return b},releaseCubes:function(a){var b=(a.rotatingAxis,Rubik.scene);console.log("%ccleaning up...","background: red; color: white"),a.rotatingPivot.updateMatrixWorld();for(var c=0;c<a.rotatingCubes.length;c++)THREE.SceneUtils.detach(a.rotatingCubes[c],a.rotatingPivot,b),a.rotatingCubes[c].updateMatrixWorld();b.remove(a.rotatingPivot),a.rotatingPivot=null,a.rotatingAxis=null,a.rotatingCubes=null,"randoming"===a.flag&&a.randomCounter<a.randomTimes||(a.setFlag("reset"),console.log("%cflag is wating now","background: yellow; color: black"),Rubik.interaction.flag="idle")}},Rubik.domEvents={onMouseMove:function(a){switch(a.flag){case"detecting":a.frameCounter<a.maxDetectingFrame?a.frameCounter++:a.directionCalc(a,a.mouse.clone());break;case"rotating":a.rotatingHandler(a);break;default:return!1}},onMouseUp:function(a){switch(a.flag){case"detecting":a.abortDetection(a);break;case"rotating":a.checkRealRotation(a);break;default:return!1}},onResize:function(a,b){a.aspect=window.innerWidth/window.innerHeight,a.updateProjectionMatrix(),b.setSize(window.innerWidth,window.innerHeight)}};